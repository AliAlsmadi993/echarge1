@model echarge1.Models.Product
@{
    ViewData["Title"] = "Add Product";
    Layout = "~/Views/Shared/_ProviderLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <style>
        :root {
            --primary-color: #1abc9c;
            --primary-light: rgba(26, 188, 156, 0.1);
            --primary-dark: #16a085;
            --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        .add-product-container {
            max-width: 800px;
            margin: 2rem auto;
            animation: fadeIn 0.6s ease-out;
        }

        .form-header {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--primary-light);
        }

        .form-title {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary-dark);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .form-card {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: var(--card-shadow);
        }

        .form-label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control {
            border-radius: 10px;
            border: 1px solid #ddd;
            padding: 0.75rem 1rem;
            transition: var(--transition);
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(26, 188, 156, 0.2);
            }

        .btn-save {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            transition: var(--transition);
            box-shadow: 0 4px 15px rgba(26, 188, 156, 0.3);
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

            .btn-save:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(26, 188, 156, 0.4);
            }

        .btn-cancel {
            background: white;
            color: #7f8c8d;
            border: 1px solid #ddd;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

            .btn-cancel:hover {
                background: #f8f9fa;
                transform: translateY(-2px);
            }

        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 1rem;
        }

        .image-preview {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            transition: var(--transition);
            position: relative;
        }

            .image-preview:hover {
                transform: scale(1.05);
            }

        .file-input-label {
            display: block;
            padding: 0.75rem;
            border: 2px dashed #ddd;
            border-radius: 10px;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
        }

            .file-input-label:hover {
                border-color: var(--primary-color);
                background-color: var(--primary-light);
            }

        .file-input {
            display: none;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .form-card {
                padding: 1.5rem;
            }

            .form-title {
                font-size: 1.5rem;
            }

            .form-actions {
                flex-direction: column;
                gap: 1rem;
            }
        }
    </style>
}

<div class="add-product-container">
    <div class="form-header">
        <h1 class="form-title">
            <i class="fas fa-plus-circle"></i> Add New Product
        </h1>
    </div>

    <div class="form-card">
        <form method="post" enctype="multipart/form-data" asp-action="AddProduct">
            <div class="form-group mb-3">
                <label class="form-label">Product Name</label>
                <input asp-for="Name" class="form-control" placeholder="Enter product name" required />
            </div>

            <div class="form-group mb-3">
                <label class="form-label">Description</label>
                <textarea asp-for="Description" class="form-control" rows="4" placeholder="Write detailed product description..." required></textarea>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">Price (JD)</label>
                        <input asp-for="Price" class="form-control" type="number" min="0" step="0.01" placeholder="0.00" required />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">Stock Quantity</label>
                        <input asp-for="StockQuantity" class="form-control" type="number" min="0" placeholder="0" required />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">Category</label>
                        <input asp-for="Category" class="form-control" placeholder="Product category" required />
                    </div>
                </div>
            </div>

            <div class="form-group mb-4">
                <label class="form-label">Product Images</label>
                <label for="image-upload" class="file-input-label">
                    <i class="fas fa-cloud-upload-alt" style="font-size: 1.5rem; color: var(--primary-color); margin-bottom: 0.5rem;"></i>
                    <p>Click to upload images (Max 5 images)</p>
                </label>
                <input id="image-upload" type="file" name="Images" class="file-input" multiple accept="image/*" required onchange="previewImages(event)" />
                <div id="preview" class="image-preview-container"></div>
            </div>

            <div class="form-actions d-flex justify-content-between">
                <button type="submit" class="btn-save">
                    <i class="fas fa-save"></i> Save Product
                </button>
                <a asp-action="MyProducts" class="btn-cancel">
                    <i class="fas fa-times"></i> Cancel
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function previewImages(event) {
            const files = event.target.files;
            const preview = document.getElementById('preview');
            preview.innerHTML = '';

            // Limit to 5 images
            const maxFiles = 5;
            const filesToShow = Array.from(files).slice(0, maxFiles);

            if (files.length > maxFiles) {
                alert(`You can upload maximum ${maxFiles} images. Only the first ${maxFiles} will be shown.`);
            }

            filesToShow.forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.classList.add('image-preview');
                        preview.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        // Trigger file input when clicking on the label
        document.getElementById('image-upload').addEventListener('change', function() {
            const label = document.querySelector('.file-input-label p');
            const files = this.files;
            if (files.length > 0) {
                label.textContent = `${files.length} file(s) selected`;
            } else {
                label.textContent = 'Click to upload images (Max 5 images)';
            }
        });
    </script>
}